package MultiThreading;

public class MyThreadNamePriority extends Thread{
	
	//Thread PRIORITY
	/*
	 * Default priority generated by JVM or explicitly given by program 
	 * Valid range of Thread priority is 1 (Minimum)to 10(Maximum) 
	 * Thread class represent CONSTANT priority- Thread.MIN_PRIORITY -1 Thread.NORM_PRIORITY-5 Thread.MAX_PRIORITY-10
	 * Thread scheduler will use priority (Max to Min) while allocating processor for execution
	 * If 2 threads in same priority-we canâ€™t expect exact execution order depends on thread scheduler.
	 */
	//	Default priority for main thread -5
	//Default priority for all remaining threads-inherited
	
	@Override
	public void run()
	{
		
		for(int i=0;i<10;i++)
		{
			System.out.println("Child Thread: "+Thread.currentThread().getName()+" "+Thread.currentThread().getPriority());
		}
		
		
	}
public static void main(String[] args) {
		
		//Thread name
		//Default priority
		 // System.out.println(Thread.currentThread().getName());
		 // System.out.println(Thread.currentThread().getPriority());
		  
		//set Thread name for main thread
			//set priority for main thread
		  Thread.currentThread().setName("umaThread");
		//  System.out.println(Thread.currentThread().getName());
		 //Thread.currentThread().setPriority(8);
		  System.out.println(Thread.currentThread().getPriority());
		  MyThreadNamePriority th=new MyThreadNamePriority();	
		  th.setPriority(10);		
		  System.out.println("Child Thread  "+th.getPriority());				  
		th.start();
		
		//int result=1/0;
		  for(int i=0;i<10;i++)
			{
				System.out.println(" main thread"+" " +Thread.currentThread().getName()+" "+Thread.currentThread().getPriority());
			}
		
}

}